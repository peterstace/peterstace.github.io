<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>unmarshal on Peter Stace</title>
    <link>https://petsta.net/tags/unmarshal/</link>
    <description>Recent content in unmarshal on Peter Stace</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 18 Jun 2015 22:03:45 +1100</lastBuildDate><atom:link href="https://petsta.net/tags/unmarshal/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Irregular JSON decoding in Go</title>
      <link>https://petsta.net/posts/irregular-json-decoding-in-go/</link>
      <pubDate>Thu, 18 Jun 2015 22:03:45 +1100</pubDate>
      
      <guid>https://petsta.net/posts/irregular-json-decoding-in-go/</guid>
      <description>The Go standard library has an awesome JSON encoding and decoding package, which makes handling JSON a breeze. If you&amp;rsquo;re not familiar with the package, there are plenty of web pages around that explain its basic usage.
Basically, if you know the structure of the JSON value you&amp;rsquo;re encoding, you create the zero value of the corresponding Go type, and pass a pointer to it into the json.Unmarshal (along with the JSON value).</description>
    </item>
    
  </channel>
</rss>
