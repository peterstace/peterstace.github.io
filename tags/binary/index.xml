<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>binary on Peter Stace</title>
    <link>https://petsta.net/tags/binary/</link>
    <description>Recent content in binary on Peter Stace</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 21 May 2015 21:51:39 +1100</lastBuildDate>
    
	<atom:link href="https://petsta.net/tags/binary/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Where should I put my mocks in Go?</title>
      <link>https://petsta.net/posts/2015-05-21-where-should-i-put-my-mocks-in-go/</link>
      <pubDate>Thu, 21 May 2015 21:51:39 +1100</pubDate>
      
      <guid>https://petsta.net/posts/2015-05-21-where-should-i-put-my-mocks-in-go/</guid>
      <description>Introduction Go&amp;rsquo;s toolchain provides a mechanism to help prevent test code from being included in production binaries. It should be obvious why this is useful; if stubs or mocks intended for testing make their way your production system, they may cause it to fail silently in catastrophic and unexpected ways. This is especially a concern if you don&amp;rsquo;t have automated application and integration tests in place. Imagine if you somehow end up with a stubbed out authentication manager that always returns true when asked if a user has administration privileges.</description>
    </item>
    
  </channel>
</rss>